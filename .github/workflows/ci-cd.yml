name: CI/CD for Spring Boot with Gradle

on:
  push:
    branches:
      - main
      - ci-cd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
      with:
        egress-policy: audit

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up JDK
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
      with:
        distribution: 'adopt'
        java-version: '21'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Archive production artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: packaged-application
        path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
      with:
        egress-policy: audit

    - name: Download artifacts
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: packaged-application
        path: build/libs/

    - name: Setup key
      id: setup-key
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        echo "$DEPLOY_KEY" >> $HOME/key.pem
        chmod 400 $HOME/key.pem

    - name: Test Secrets
      run: echo "DEPLOY_HOST is ${{ secrets.DEPLOY_HOST }}"

    - name: Copy JAR to EC2
      uses: appleboy/scp-action@7f18bf0ec86d81d9fba5e2bdf3253b7b22a604ab # master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ubuntu
        key: ${{ secrets.DEPLOY_KEY }}
        source: "build/libs/*.jar"
        target: "/home/ubuntu/deployment/"

    - name: Connect SSH and Restart Services
      run: |
        ssh -o StrictHostKeyChecking=no -i $HOME/key.pem ubuntu@ec2-52-206-2-172.compute-1.amazonaws.com '
          sudo systemctl restart event-sphere-event &&
          sudo systemctl restart nginx
        ' 
